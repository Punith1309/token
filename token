// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

import "@openzeppelin/contracts/token/ERC20/ERC20.sol";
import "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

contract Token is ERC20, ERC20Burnable, Ownable(msg.sender) {
    constructor(string memory tokenName, string memory tokenSymbol) ERC20(tokenName, tokenSymbol) {}

    function mintTokens(address grantee_address, uint256 total) external onlyOwner {
        _mint(grantee_address, total);
    }

    function burnTokens(uint256 totalToDestroy) public  {
        _burn(msg.sender, totalToDestroy);
    }

    function transferTokens(address recipient, uint256 totalToTransfer) public virtual returns (bool) {
        _transfer(_msgSender(), recipient, totalToTransfer);
        return true;
    }
}
